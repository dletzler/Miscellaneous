}
}
test.rec$Cuisine<-sapply(test.rec$Restaurant, cuisine)
test.rec$Expense<-sapply(test.rec$Restaurant, expense)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating)) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
test.rec<-unique(data.frame(sample(1:100, 1000, replace=T), sample(1:200, 1000, replace=T)))
test.rec$Restaurant<-as.character(test.rec$Restaurant)
test.rec$Rating<-sample(0:5, nrow(test.rec), replace=T)
names(test.rec)<-c("Reviewer", "Restaurant", "Rating")
test.rec$Cuisine<-sapply(test.rec$Restaurant, cuisine)
test.rec$Expense<-sapply(test.rec$Restaurant, expense)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating)) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
simple.rec(27)
test.rev<-spread(group_by(test.rec, Restaurant), Restaurant, Rating)[c(-2, -3)]
test.rev<-spread(group_by(test.rec, Restaurant), Restaurant, Rating)[c(-2, -3)] %>% melt
library(reshape2)
test.rev<-spread(group_by(test.rec, Restaurant), Restaurant, Rating)[c(-2, -3)] %>% melt
test.rev<-spread(group_by(test.rec, Restaurant), Restaurant, Rating)[c(-2, -3)] %>% group_by(Reviewer)
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(group_by(test.rec, Restaurant), Restaurant, Rating)[c(-2, -3)]
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(group_by(test.rec, Restaurant), Restaurant, Rating)
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number())
?row_number()
?rank
test.rev<-test.rec %>% group_by(Reviewer) %>% spread(group_by(test.rec, Restaurant), Restaurant, Rating)
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Restaurant, Rating)[c(-2, -3)]
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)[c(-2, -3)]
test.rev<-test.rec %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)
test.rev<-test.rec %>% select(-Cuisine, -Expense) %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)
test.rev<-test.rec %>% select(-Cuisine, -Expense) %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating) %>% select(-id)
test.rev<-test.rec %>% select(-Cuisine, -Expense) %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)
class(test.rec$Reviewer)
test.rec$Reviewer<-as.character(test.rec$Reviewer)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating)) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
test.rev<-test.rec %>% select(-Cuisine, -Expense) %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)
test.rev<-test.rec %>% select(-Cuisine, -Expense) %>% group_by(Reviewer) %>% mutate (id = row_number()) %>% spread(Restaurant, Rating)
View(test.rev)
test.rev<-test.rec %>% select(Reviewer, Restaurant, Rating) %>% spread(Restaurant, Rating)
library(corrplot)
test.cor<-cor(test.rev)
row.names(test.rev)<-test.rev$Reviewer
test.rev<-select(test.rev, -Reviewer)
test.cor<-cor(test.rev)
test.cor<-cor(test.rev, na.rm=T)
d <- data.frame(x1=rnorm(10),
x2=rnorm(10),
x3=rnorm(10))
View(d)
cor(d)
test.rec<-unique(data.frame(sample(1:50, 1000, replace=T), sample(1:50, 1000, replace=T)))
test.rec$Rating<-sample(0:5, nrow(test.rec), replace=T)
names(test.rec)<-c("Reviewer", "Restaurant", "Rating")
test.rec$Reviewer<-as.character(test.rec$Reviewer)
test.rec$Cuisine<-sapply(test.rec$Restaurant, cuisine)
test.rec$Expense<-sapply(test.rec$Restaurant, expense)
View(test.rec)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating)) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
simple.rec(27)
test.rev<-test.rec %>% select(Reviewer, Restaurant, Rating) %>% spread(Restaurant, Rating)
row.names(test.rev)<-test.rev$Reviewer
test.rev<-select(test.rev, -Reviewer)
test.rec<-unique(data.frame(sample(1:50, 1000, replace=T), sample(1:40, 1000, replace=T)))
test.rec$Rating<-sample(0:5, nrow(test.rec), replace=T)
names(test.rec)<-c("Reviewer", "Restaurant", "Rating")
test.rec$Reviewer<-as.character(test.rec$Reviewer)
test.rec$Cuisine<-sapply(test.rec$Restaurant, cuisine)
test.rec$Expense<-sapply(test.rec$Restaurant, expense)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating)) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
test.rev<-test.rec %>% select(Reviewer, Restaurant, Rating) %>% spread(Restaurant, Rating)
row.names(test.rev)<-test.rev$Reviewer
test.rev<-select(test.rev, -Reviewer)
test.rev<-select(test.rev, -Reviewer)[order(row.names),]
test.rev<-test.rev[order(row.names),]
test.cor<-cor(test.rev, na.rm=T)
test.cor<-cor(test.rev)
?cor
test.rev<-test.rec %>% select(Reviewer, Restaurant, Rating) %>% spread(Reviewer, Rating)
row.names(test.rev)<-test.rev$Restaurant
test.rev<-select(test.rev, -Reviewer)
test.rev<-select(test.rev, -Restaurant)
test.cor<-cor(test.rev)
test.cor<-cor(test.rev, use = "pairwise.complete.obs")
test.rev<-test.rec %>% select(Reviewer, Restaurant, Rating) %>% spread(Restaurant, Rating)
row.names(test.rev)<-test.rev$Reviewer
test.rev<-select(test.rev, -Reviewer)
test.cor<-cor(test.rev, use = "pairwise.complete.obs")
?pmax
test.cor[1,][order(test.cor[1,], decreasing=F),]
test.cor[1,]
test.cor[1,][order(test.cor[1,]),]
dim(test.cor[1,])
test.cor[1,][order(test.cor[1,1:40]),]
test.cor.1<-test.cor[1,]
test.cor.1[order(test.cor.1),]
test.cor.1<-unname(test.cor[1,])
test.cor.1[order(test.cor.1)]
test.cor.1<-test.cor[1,]
sort(test.cor.1)
sort(test.cor.1, decreasing=T)
med.rec<-function(restaurant, df){
test.cor<-cor(df, use = "pairwise.complete.obs")
rest.order<-sort(test.cor[restaurant,], decreasing=T)
rec<-names(rest.order)[2:6]
}
med.rec(2, test.rev)
med.rec<-function(restaurant, df){
test.cor<-cor(df, use = "pairwise.complete.obs")
rest.order<-sort(test.cor[restaurant,], decreasing=T)
rec<-names(rest.order)[2:6]
return(rec)
}
med.rec(2, test.rev)
restaurant<-test.rec %>% group_by(Restaurant) %>% summarize(Avg.Rating = mean(Rating), Number.Rating = n()) %>% mutate(Cuisine = sapply(Restaurant, cuisine), Expense = sapply(Restaurant, expense))
load("~/Alternate Career/Data Science/Code Challenges/Spotify/iday.RData")
library(ggmap)
library(ggplot2)
usa<-get_map("united states", maptype="satellite", zoom=3)
ggmap(usa, extent = "device") +
stat_density_2d(data=tday.02.16[1:100000,], aes(x=DEST_LONG, y=DEST_LAT, weights=Pass.Flight, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
load("~/Alternate Career/Data Science/Code Challenges/Spotify/tday.RData")
tday.02.16<-tday.combined %>% filter(year(FL_DATE)>= 2002)
library(dplyr)
tday.02.16<-tday.combined %>% filter(year(FL_DATE)>= 2002)
library(lubridate)
tday.02.16<-tday.combined %>% filter(year(FL_DATE)>= 2002)
ggmap(usa, extent = "device") +
stat_density_2d(data=tday.02.16[1:100000,], aes(x=DEST_LONG, y=DEST_LAT, weights=Pass.Flight, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
tday.02.16<-tday.02.16 %>% mutate(Year = year(FL_DATE))
tday.02.16<-left_join(tday.02.16, airline.merge, by=c("Year", "Description"))
tday.02.16$WEEKDAY<-factor(tday.02.16$WEEKDAY, levels=c("Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
View(tday.02.16)
ggmap(usa, extent = "device") +  geom_density2d(data = tday.02.16[1:100000,], aes(x = DEST_LONG, y = DEST_LAT, weight=Pass.Flight), size = 0.3) +
stat_density_2d(data=tday.02.16[1:100000,], aes(x=DEST_LONG, y=DEST_LAT, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(usa, extent = "device") +  geom_density(data = tday.02.16[1:100000,], aes(x = DEST_LONG, y = DEST_LAT, weight=Pass.Flight), size = 0.3) +
stat_density_2d(data=tday.02.16[1:100000,], aes(x=DEST_LONG, y=DEST_LAT, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(usa, extent = "device") +  geom_density_2d(data = tday.02.16[1:100000,], aes(x = DEST_LONG, y = DEST_LAT), size = 0.3) +
stat_density_2d(data=tday.02.16[1:100000,], aes(x=DEST_LONG, y=DEST_LAT, fill=..level.., alpha=..level.., weight=Pass.Flight), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
rm( tday.combined)
save.image("~/Alternate Career/Data Science/Code Challenges/Spotify/iday.RData")
load("~/Alternate Career/Data Science/Code Challenges/Spotify/iday.RData")
load("~/Alternate Career/Data Science/Code Challenges/Spotify/iday.RData")
library(shinydashboard)
?selectizeInput
?shiny::selectizeInput
state.name
weekdays()
weekdays
weekdays.Date()
weekdays.Date
weekdays(Sys.Date())
weekdays(Sys.date):weekdays(Sys.date+7)
weekdays(Sys.Date()):weekdays(Sys.Date()+7)
weekdays(Sys.Date())
weekdays(Sys.Date()):weekdays(Sys.Date()+7)
weekdays(Sys.date) + 0:6
weekdays(Sys.Date()) + 0:6
weekdays(Sys.Date() + 0:6)
week<-weekdays(Sys.Date() + 0:6)
week<-week[week!="Monday"]
shiny::runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airlines<-unique(tday.02.16$Airline)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airlines
View(tday.02.16)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
tday.02.16$WEEKDAY[1]
tday.02.16$WEEKDAY[1]=="Tuesday"
levels(tday.02.16$WEEKDAY)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?bkde2D
??bkde2D
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airlines
unique(tday.02.16$Description)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
all.pass<-data.table(airline())[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
all.pass<-data.table(tday.02.16[1:1000000,])[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
all.pass<-data.table(tday.02.16[1:100000,])[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
heat<-geom_density_2d(data = all.pass, aes(x, y), size = 0.3) +
stat_density_2d(data = all.pass, aes(x, y, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(usa, extent = "device") +  geom_density_2d(data = rep.with.dt[1:100000,], aes(x, y), size = 0.3) +
stat_density_2d(data = rep.with.dt[1:100000,], aes(x, y, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
rep.with.dt<-data.table(tday.02.16)[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
rep.with.dt<-data.table(tday.02.16[1:100000,])[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
rep.with.dt<-data.table(tday.02.16[1:10000,])[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
ggmap(usa, extent = "device") +  geom_density_2d(data = rep.with.dt[1:100000,], aes(x, y), size = 0.3) +
stat_density_2d(data = rep.with.dt[1:100000,], aes(x, y, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?stat_density_2d
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(.0045, .0068), gridsize = c(100,100))
library(KernSmooth)
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(.0045, .0068), gridsize = c(100,100))
?bkde2D
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.05, 0.05), gridsize = c(100,100))
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.1, 0.1), gridsize = c(100,100))
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.1, 0.1), gridsize = c(1000,1000))
kde
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
str(CL)
summary(CL)
summary(CL[[5]])
CL[[5]]
?heat.colors
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
LEVS <- as.factor(sapply(CL, `[[`, "level"))
LEVS
NLEV <- length(levels(LEVS))
NLEV
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.1, 0.1), gridsize = c(10000,10000))
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.05, 0.05), gridsize = c(1000,1000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.15, 0.15), gridsize = c(1000,1000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.15, 0.15), gridsize = c(2000,2000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.2, 0.2), gridsize = c(2000,2000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.2, 0.2), gridsize = c(3000,3000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
ggmap(usa, extent = "device") +  geom_density_2d(data = rep.with.dt[1:100000,], aes(x, y), size = 0.3) +
stat_density_2d(data = rep.with.dt[1:100000,], aes(x, y, fill=..level.., alpha=..level..), size=0.01, bins=16, geom="polygon") +
scale_fill_gradient(low = "green", high = "red")
rep.with.dt<-data.table(tday.02.16[1:100000,])[,list(x=rep(DEST_LONG, Pass.Flight),y=rep(DEST_LAT,Pass.Flight))]
kde <- bkde2D(rep.with.dt[ , list(x,y)],
bandwidth=c(0.2, 0.2), gridsize = c(2000,2000))
CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
LEVS <- as.factor(sapply(CL, `[[`, "level"))
NLEV <- length(levels(LEVS))
pgons <- lapply(1:length(CL), function(i)
Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
spgons = SpatialPolygons(pgons)
leaflet(spgons) %>% addTiles() %>%
addPolygons(color = heat.colors(NLEV, NULL)[LEVS])
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
c("All", unique(tday.02.16$Description))
?sliderInput
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
"Tuesday" %in% c("Tuesday", "Wednesday", "Thursday")
"Sundday" %in% c("Tuesday", "Wednesday", "Thursday")
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
else filter(year(), WEEKDAY %in% c("Friday", "Saturday", "Sunday"))
else filter(year(), WEEKDAY %in% c("Friday", "Saturday", "Sunday"))
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?sliderInput
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
as.Date(2003)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?dateRangeInput
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?bkde2D
airport<-tday.02.16 %>% group_by(DEST_AIRPORT) %>% summarize(Count=n())
View(airport)
?contourLines
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?addPolygons
head(kde)
head(CL[[1]])
summary(LEVS)
?heat.colors
tday.02.16 %>% filter(DEST_ST =="HI", WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% summarize(n())
tday.02.16 %>% filter(DEST_ST =="HI", WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% summarize(n())
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
?selectizeInput
data.frame()
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) group_by(DEST_AIRPORT) %>% summarize(Count=n())
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT) %>% summarize(Count=n())
airport2<-tday.02.16 %>% filter(WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% group_by(DEST_AIRPORT) %>% summarize(Count=n())
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% mutate(Difference = Count.y-Count.x)
View(airport.comp)
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% mutate(Difference = (Count.x-Count.y)/Count.y)
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% filter(Count.y > 10) %>% mutate(Difference = (Count.x-Count.y)/Count.y)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% filter(Count.y > 100) %>% mutate(Difference = (Count.x-Count.y)/Count.y)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airport.airline<- tday.02.16 %>% group_by(DEST_AIRPORT, Description) %>% summarize(Total = n()) %>% group_by(DEST_AIRPOT) %>% filter(Total==max(Total))
airport.airline<- tday.02.16 %>% group_by(DEST_AIRPORT, Description) %>% summarize(Total = n()) %>% group_by(DEST_AIRPORT) %>% filter(Total==max(Total))
View(airport.airline)
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
View(airline)
unique(filter(tday.02.16, DEST_AIRPORT=="Luis Munoz Marin Internationa") %>% select(DEST_LONG, DEST_LAT))
missing.coord<-filter(tday.02.16, is.na(DEST_LONG))
unique(filter(tday.02.16, DEST_AIRPORT=="Luis Munoz Marin International") %>% select(DEST_LONG, DEST_LAT))
unique(filter(tday.02.16, DEST_AIRPORT=="Cyril E. King") %>% select(DEST_LONG, DEST_LAT))
unique(filter(tday.02.16, DEST_AIRPORT=="Cyril E King") %>% select(DEST_LONG, DEST_LAT))
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
runApp('Alternate Career/Data Science/Code Challenges/Spotify')
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT) %>% summarize(Count=sum(Pass.Flight), DEST_LONG, DEST_LAT)
airport2<-tday.02.16 %>% filter(WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% group_by(DEST_AIRPORT) %>% summarize(Count=sum(Pass.Flight), DEST_LONG, DEST_LAT)
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% filter(Count.y > 100) %>% mutate(Difference = (Count.x-Count.y)/Count.y)
View(airport.comp)
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT) %>% summarize(Count=sum(Pass.Flight), DEST_LONG = DEST_LONG, DEST_LAT = DEST_LAT)
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight))
airport2<-tday.02.16 %>% filter(WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight))
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% filter(Count.y > 100) %>% mutate(Difference = (Count.x-Count.y)/Count.y)
View(airport1)
View(airport2)
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT")
airport.comp<-full_join(airport1, airport2, by="DEST_AIRPORT") %>% filter(Count.y > 100)
View(airport.comp)
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT") %>% filter(Count.y > 100)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
#Link airline codes
#Corrections
airline.all2$Airline[airline.all2$Airline=="americawest"]<-"america west"
airline.all2$Airline[airline.all2$Airline=="expressjet"]<-"express jet"
#Make translation
air.code2<-data.frame(unique(airline.all2$Airline)[order(unique(airline.all2$Airline))], unique(tday.02.16$Description)[order(unique(tday.02.16$Description))])
names(air.code2)<-c("Airline", "Description")
airline.all2<-left_join(airline.all2, air.code2, by="Airline")
airline.merge<-airline.all2 %>% filter(Month=="Nov") %>% select(Year, Description, Pass.Flight)
tday.02.16<-tday.02.16 %>% mutate(Year = year(FL_DATE))
tday.02.16<-left_join(tday.02.16, airline.merge, by=c("Year", "Description"))
t.pass2<-tday.02.16 %>% group_by(Year) %>% summarize(Passengers = sum(Pass.Flight), Flights=n())
plot(x=t.pass2$Year, y=t.pass2$Passengers, pch=19)
#THE BIG QUESTIONS
#Is Wednesday the nightmare everyone thinks it is?
tday.02.16$WEEKDAY<-factor(tday.02.16$WEEKDAY, levels=c("Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 100)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 10000)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
leaflet %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3,
popup= paste(sep="<br/>", Description, paste(Difference*100, "% Change, Leave vs. Return")))
leaflet %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3,
leaflet %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3),
leaflet %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3)
leaflet %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=DEST_LONG, lat=DEST_LAT, opacity=1, color = ~Color, radius= 3)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color = ~Color, radius= 3)
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$Difference)
class(pal)
airport.comp$Color<-pal(airport.comp$Difference)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3)
popup= paste(sep="<br/>", Description, paste(Difference*100, "% Change, Leave vs. Return"))
popup= paste(sep="<br/>", DEST_AIRPORT, paste(Difference*100, "% Change, Leave vs. Return"))
airport.comp$DEST_AIRPORT<-airport.comp$DEST_AIRPORT*100
airport.comp$Difference<-airport.comp$Difference*100
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$Difference)
airport.comp$Difference<-airport.comp$Difference^0.5
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$Difference)
airport.comp$Color<-pal(airport.comp$Difference)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", DEST_AIRPORT, paste(Difference*100, "% Change, Leave vs. Return")))
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(airport.comp$Difference*100, "% Change, Leave vs. Return")))
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 10000)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
airport.comp$Difference<-airport.comp$Difference*100
airport.comp$SR<-abs(airport.comp$Difference)^0.5
airport.comp$SR<-abs(airport.comp$Difference)^0.5*ifelse(airport.comp$Difference*100>=0, 1, -1)
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$SR)
airport.comp$Color<-pal(airport.comp$Difference)
View(airport.comp)
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 10000)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
airport.comp$Difference<-airport.comp$Difference*100
View(airport.comp)
head(airport.comp)
airport.comp$SR<-abs(airport.comp$Difference)^0.5*ifelse(airport.comp$Difference*100>=0, 1, -1)
head(airport.comp)
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$SR)
airport.comp$Color<-pal(airport.comp$Difference)
head(airport.comp)
filter(airport.comp, is.na(colorBin()))
filter(airport.comp, is.na(Color))
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 10000)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
airport.comp$Difference<-airport.comp$Difference*100
airport.comp$SR<-abs(airport.comp$Difference)^0.5*ifelse(airport.comp$Difference*100>=0, 1, -1)
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$SR)
airport.comp$Color<-pal(airport.comp$Difference)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(airport.comp$Difference*100, "% Change, Leave vs. Return")))
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(signif(airport.comp$Difference, 2), "% Change, Leave vs. Return")))
View(airport.comp)
airport.comp$Color<-pal(airport.comp$SR)
airport.comp$Color<-pal(airport.comp$SR)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(signif(airport.comp$Difference, 2), "% Change, Leave vs. Return")))
round(100.31555, 2)
signif(100.31555, 2)
tday.02.16$DEST_LONG<-round(tday.02.16$DEST_LONG, 1)
tday.02.16$DEST_LAT<-round(tday.02.16$DEST_LAT, 1)
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight))
airport2<-tday.02.16 %>% filter(WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight))
View(airport1)
names(tday.02.16)
head(tday.02.16)
sum(tday.02.16$Pass.Flight.x!=tday.02.16$Pass.Flight.y)
tday.02.16<-tday.02.16,[-27]
tday.02.16<-tday.02.16[,-27]
airport1<-tday.02.16 %>% filter(WEEKDAY %in% c("Tuesday", "Wednesday", "Thursday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight.x))
airport2<-tday.02.16 %>% filter(WEEKDAY %in% c("Friday", "Saturday", "Sunday")) %>% group_by(DEST_AIRPORT, DEST_LONG, DEST_LAT) %>% summarize(Count=sum(Pass.Flight.x))
airport.comp<-full_join(airport1, airport2, by=c("DEST_AIRPORT", "DEST_LONG", "DEST_LAT")) %>% filter(Count.y > 10000)  %>% mutate(Difference = (Count.x-Count.y)/Count.y)
length(unique(airport.comp$DEST_AIRPORT))
airport.comp$Difference<-airport.comp$Difference*100
airport.comp$SR<-abs(airport.comp$Difference)^0.5*ifelse(airport.comp$Difference*100>=0, 1, -1)
airport.comp$Color<-pal(airport.comp$SR)
pal <- colorNumeric(palette = "RdYlGn", domain = airport.comp$SR)
airport.comp$Color<-pal(airport.comp$SR)
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(airport.comp$Count.x, "visited," paste(signif(airport.comp$Difference, 2), "% Change")))
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(round(airport.comp$Count.x, 0), "visited,", round(airport.comp$Count.y, 0), "returned"), paste(signif(airport.comp$Difference, 2), "% Change")))
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(round(airport.comp$Count.x, 0), "came for Thanksgiving,", round(airport.comp$Count.y, 0), "returned home here"), paste(signif(airport.comp$Difference, 2), "% Change")))
leaflet() %>% setView(lng=-99, lat=39, zoom=3) %>% addTiles() %>% addCircleMarkers(data=airport.comp, lng=~DEST_LONG, lat=~DEST_LAT, opacity=1, color =~Color , radius= 3,
popup= paste(sep="<br/>", airport.comp$DEST_AIRPORT, paste(round(airport.comp$Count.x, 0), "came for Thanksgiving,", round(airport.comp$Count.y, 0), "returned here"), paste(signif(airport.comp$Difference, 2), "% Change")))
setwd("~/GitHub/dletzler.github.io/thanksgiving-air")
tday.03.16<-readRDS("rday.RDS")
tday.03.16<-readRDS("tday.RDS")
write.csv(tday.03.16, "tday.csv", row.names=F)
tday.test<-read.csv("tday.csv")
View(tday.test)
class(tday$FL_DATE)
class(tday.test$FL_DATE)
library(lubridate)
year(tday.test$FL_DATE)[2]
shiny::runApp()
runApp()
?readBin
con <- gzfile("tday.rds", "rb")
tday.test <- readBin(con, "raw", n = 1e7) # size is a guess
close(con)
tday.03.16<-load("tday.rds")
tday.03.16<-readRDS("tday.rds")
View(tday.03.16)
tday.03.16<-readRDS("tday.rds") %>%
select(Description, FL_NUM, FL_DATE, YEAR, WEEKDAY, CRS_DEP_TIME, CRS_ARR_TIME, ORIGIN_AIRPORT, DEST_AIRPORT, DEST_LAT, DEST_LONG, Pass.Flight)
tday.03.16<-readRDS("tday.rds") %>%
select(Description, FL_NUM, FL_DATE, Year, WEEKDAY, CRS_DEP_TIME, CRS_ARR_TIME, ORIGIN_AIRPORT, DEST_AIRPORT, DEST_LAT, DEST_LONG, Pass.Flight)
runApp()
runApp()
